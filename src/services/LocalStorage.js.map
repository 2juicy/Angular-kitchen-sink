{"version":3,"file":"LocalStorage.js","sourceRoot":"","sources":["LocalStorage.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;YAGA;gBAAA;gBAkBA,CAAC;gBAhBG,8BAAO,GAAP,UAAQ,GAAW,EAAE,YAAkB;oBACnC,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC5B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;oBACjD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,MAAM,CAAC,YAAY,CAAC;oBACxB,CAAC;gBACL,CAAC;gBAED,8BAAO,GAAP,UAAQ,GAAW,EAAE,KAAU;oBAC3B,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;gBACrD,CAAC;gBAED,iCAAU,GAAV,UAAW,GAAW;oBAClB,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBACjC,CAAC;gBAjBL;oBAAC,iBAAU,EAAE;;gCAAA;gBAmBb,mBAAC;YAAD,CAAC,AAlBD,IAkBC;YAlBD,uCAkBC,CAAA","sourcesContent":["import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LocalStorage {\r\n\r\n    getItem(key: string, defaultValue?: any): any {\r\n        if (localStorage.getItem(key)) {\r\n            return JSON.parse(localStorage.getItem(key));\r\n        } else {\r\n            return defaultValue;\r\n        }\r\n    }\r\n\r\n    setItem(key: string, value: any): void {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n}"]}