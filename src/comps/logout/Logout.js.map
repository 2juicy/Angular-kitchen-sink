{"version":3,"file":"Logout.js","sourceRoot":"","sources":["Logout.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAgBA;gBACI,gBAAoB,MAAa;oBAAb,WAAM,GAAN,MAAM,CAAO;oBAGzB,sBAAiB,GAAW,IAAI,CAAC;gBAFzC,CAAC;gBAIO,gCAAe,GAAvB;oBACI,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;oBAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;gBAC/B,CAAC;gBAEM,8BAAa,GAApB;oBAEI,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;wBACzB,MAAM,CAAC,IAAI,CAAC;oBAChB,CAAC;oBACD,IAAI,EAAE,GAAG,UAAC,MAAM;wBACZ,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACT,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE;gCACzB,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,kDAAkD,CAAC,CAAC;gCAC5E,MAAM,CAAC,IAAI,CAAC;4BAChB,CAAC,CAAC,CAAC;wBACP,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,OAAO,CAAC,OAAO,EAAE,CAAC;4BAClB,MAAM,CAAC,KAAK,CAAC;wBACjB,CAAC;oBACL,CAAC,CAAA;oBACD,OAAO,CAAC,OAAO,CAAC,kCAAkC,EAAE,EAAE,CAAC,CAAC;oBACxD,IAAI,CAAC,GAAG,uBAAU,CAAC,YAAY,CAAC,EAAE,CAAC,CAAA;oBACnC,MAAM,CAAC,CAAC,CAAC;gBACb,CAAC;gBAxCL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,QAAQ;wBAClB,QAAQ,EAAE,kUAKL;qBACR,CAAC;;0BAAA;gBAiCF,aAAC;YAAD,CAAC,AA/BD,IA+BC;YA/BD,2BA+BC,CAAA","sourcesContent":["import {Observable} from \"rxjs/Observable\";\r\nimport {Component} from \"@angular/core\";\r\nimport {Router} from \"@angular/router\";\r\nimport 'rxjs/add/observable/fromPromise';\r\nimport 'rxjs/add/observable/bindCallback';\r\nimport * as bootbox from 'bootbox';\r\n@Component({\r\n    selector: 'Logout',\r\n    template: `\r\n                <h1>Goodbye</h1>\r\n                <small>I am Logout component</small>\r\n                <h5>Demo canDeactivate by moving to a new route and locking in canDeactivate on url changes </h5>\r\n                <button (click)=\"onCanDeactivate($event)\" class=\"btn btn-default\">Logout now</button>\r\n        `\r\n})\r\n\r\nexport class Logout {\r\n    constructor(private router:Router) {\r\n    }\r\n\r\n    private allowNavigateAway:boolean = true;\r\n\r\n    private onCanDeactivate() {\r\n        this.allowNavigateAway = false;\r\n        this.router.navigate(['/'])\r\n    }\r\n\r\n    public canDeactivate():any {\r\n\r\n        if (this.allowNavigateAway) {\r\n            return true;\r\n        }\r\n        var cb = (result) => {\r\n            if (result) {\r\n                jQuery('body').fadeOut(3000, function () {\r\n                    window.location.replace(\"https://github.com/born2net/Angular-kitchen-sink\");\r\n                    return true;\r\n                });\r\n            } else {\r\n                bootbox.hideAll();\r\n                return false;\r\n            }\r\n        }\r\n        bootbox.confirm(\"Are you sure you want to logout?\", cb);\r\n        let o = Observable.bindCallback(cb)\r\n        return o;\r\n    }\r\n}\r\n"]}