{"version":3,"file":"films-component.js","sourceRoot":"","sources":["films-component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAiBA;gBAMI,wBAAoB,QAAiB,EAAU,YAAwB;oBAAnD,aAAQ,GAAR,QAAQ,CAAS;oBAAU,iBAAY,GAAZ,YAAY,CAAY;oBAH/D,gBAAW,GAAG,IAAI,CAAC;oBACnB,0BAAqB,GAAG,KAAK,CAAC;oBAGlC,IAAI,IAAI,GAAG,IAAI,CAAC;oBAChB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,KAAK;wBAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC;wBACpC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC;wBAC3C,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC;oBAC5D,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,CAAC;gBACtD,CAAC;gBAED,uCAAc,GAAd,UAAe,KAAK;oBAChB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;oBAChE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAE,CAAC,CAAC;gBAChE,CAAC;gBA9BL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,iBAAiB;wBAC3B,QAAQ,EAAE,kXAOT;qBACJ,CAAC;;kCAAA;gBAqBF,qBAAC;YAAD,CAAC,AApBD,IAoBC;YApBD,2CAoBC,CAAA","sourcesContent":["import {Component} from '@angular/core'\r\nimport {FilmActions} from \"../actions/film-actions\";\r\nimport {FilmSelectionView} from \"../components/film-selection-view\";\r\nimport {FilmView} from \"../components/film-view\";\r\nimport {AppStore} from \"angular2-redux-util\";\r\n\r\n@Component({\r\n    selector: 'films-component',\r\n    template: `\r\n        <h3>Films</h3>\r\n        <film-selection [count]=\"filmsCount\" (current)=\"setCurrentFilm($event)\"></film-selection>\r\n        <div [ngClass]=\"{'text-muted':isFetchingCurrentFilm,'text-primary':!isFetchingCurrentFilm}\" style=\"margin-top:20px;\">\r\n            <film [data]=\"currentFilm\" [loading]=\"isFetchingCurrentFilm\"></film>\r\n        </div>\r\n\r\n    `\r\n})\r\nexport class FilmsComponent {\r\n\r\n    private filmsCount;\r\n    private currentFilm = null;\r\n    private isFetchingCurrentFilm = false;\r\n\r\n    constructor(private appStore:AppStore, private _filmActions:FilmActions) {\r\n        var self = this;\r\n        this.appStore.subscribe((state) => {\r\n            self.filmsCount = state.films.count;\r\n            self.currentFilm = state.films.currentFilm;\r\n            self.isFetchingCurrentFilm = state.films.isFetchingFilm;\r\n        });\r\n        this.appStore.dispatch(_filmActions.fetchFilms());\r\n    }\r\n\r\n    setCurrentFilm(index) {\r\n        this.appStore.dispatch(this._filmActions.setCurrentFilm(index));\r\n        this.appStore.dispatch(this._filmActions.fetchFilm(index ));\r\n    }\r\n}"]}