{"version":3,"file":"admin-component.js","sourceRoot":"","sources":["admin-component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAsBA;gBASI,wBAAY,QAAiB,EAAE,WAAuB;oBAP9C,gBAAW,GAAG,IAAI,CAAC;oBACnB,gBAAW,GAAG,IAAI,CAAC;oBACnB,eAAU,GAAG,IAAI,CAAC;oBAMtB,IAAI,IAAI,GAAG,IAAI,CAAC;oBAChB,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,gBAAgB,CAAC,WAAW,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;oBACzF,IAAI,CAAC,aAAa,GAAI,WAAW,CAAC,gBAAgB,CAAC,WAAW,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;oBAExF,IAAM,mBAAmB,GAAG,cAAc,CAAC,yBAAyB,EAAE,CAAC;oBAEvE,QAAQ,CAAC,SAAS,CAAC,UAAC,KAAK;wBACrB,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC;wBAC9C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;wBACvC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC;oBAE7C,CAAC,CAAC,CAAC;oBACH,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC;gBAEhD,CAAC;gBAEc,wCAAyB,GAAxC;oBACI,IAAM,mBAAmB,GAAG,yBAAc,CAAC,UAAC,KAAS,IAAK,OAAA,KAAK,CAAC,KAAK,CAAC,UAAU,EAAtB,CAAsB,EAAE,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,WAAW,EAAvB,CAAuB,EAC9G,UAAC,UAAU,EAAE,WAAW,IAAK,OAAA,UAAU,IAAI,WAAW,GAAG,WAAW,GAAG,IAAI,EAA9C,CAA8C,CAC9E,CAAC;oBACF,MAAM,CAAC,yBAAc,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,IAAI,EAAhB,CAAgB,EAAE,mBAAmB,EAChE,UAAC,KAAK,EAAE,WAAW,IAAK,OAAA,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,GAAG,KAAK,EAAzE,CAAyE,CACpG,CAAC;gBACN,CAAC;;gBAEc,wBAAS,GAAxB,UAAyB,IAAI;oBACzB,IAAM,GAAG,GAAG,IAAI,CAAC,UAAU;yBACtB,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,EAAzB,CAAyB,CAAC;yBACrC,MAAM,CAAC,UAAC,MAAM,EAAE,EAAE,IAAI,OAAA,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,MAAM,EAA7B,CAA6B,EAAE,EAAE,CAAC,CAAC;oBAC9D,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,GAAG,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAnC,CAAmC,CAAC;gBACvD,CAAC;;gBAEc,oBAAK,GAApB,UAAqB,GAAG;oBACpB,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;gBAC5C,CAAC;;gBA3DL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,saAWT;qBACJ,CAAC;;kCAAA;gBA+CF,qBAAC;YAAD,CAAC,AA9CD,IA8CC;YA9CD,2CA8CC,CAAA","sourcesContent":["import {Component} from '@angular/core'\r\nimport {AppStore} from \"angular2-redux-util\";\r\nimport {UserActions} from \"../actions/user-actions\";\r\nimport {UsersView} from \"../components/users-view\";\r\nimport {UserView} from \"../components/user-view\";\r\nimport {createSelector} from 'reselect';\r\n\r\n@Component({\r\n    selector: 'admin',\r\n    template: `\r\n        <h3>Users</h3>\r\n        <a href=\"\" (click)=\"$event.preventDefault(); setFilmFilter(!filmFilter)\" [class.hidden]=\"!usersToShow\">\r\n            Turn filter {{filmFilter?\"off\":\"on\"}}\r\n        </a>\r\n        <users [data]=\"usersToShow\" (current)=\"setCurrentUser($event)\">\r\n        </users>\r\n        <hr/>\r\n        <h3>Current User</h3>\r\n        <br/>\r\n        <user [data]=\"currentUser\"></user>\r\n    `\r\n})\r\nexport class AdminComponent {\r\n\r\n    private usersToShow = null;\r\n    private currentUser = null;\r\n    private filmFilter = null;\r\n\r\n    private setCurrentUser;\r\n    private setFilmFilter;\r\n\r\n    constructor(appStore:AppStore, userActions:UserActions) {\r\n        var self = this;\r\n        this.setCurrentUser = userActions.createDispatcher(userActions.setCurrentUser, appStore);\r\n        this.setFilmFilter  = userActions.createDispatcher(userActions.setFilmFilter, appStore);\r\n\r\n        const usersToShowSelector = AdminComponent.createUsersToShowSelector();\r\n\r\n        appStore.subscribe((state) => {\r\n            self.usersToShow = usersToShowSelector(state);\r\n            self.currentUser = state.users.current;\r\n            self.filmFilter = state.users.filmFilter;\r\n\r\n        });\r\n        appStore.dispatch(userActions.fetchUsers());\r\n\r\n    }\r\n\r\n    private static createUsersToShowSelector() {\r\n        const currentFilmSelector = createSelector((state:any) => state.users.filmFilter, state => state.films.currentFilm,\r\n            (filmFilter, currentFilm) => filmFilter && currentFilm ? currentFilm : null\r\n        );\r\n        return createSelector(state => state.users.list, currentFilmSelector,\r\n            (users, currentFilm) => currentFilm ? users.filter(AdminComponent.getFilter(currentFilm)) : users\r\n        );\r\n    };\r\n\r\n    private static getFilter(film) {\r\n        const ids = film.characters\r\n            .map(url => AdminComponent.getId(url))\r\n            .reduce((idsMap, id)=> (idsMap[id] = true) && idsMap, {});\r\n        return user => ids[AdminComponent.getId(user.url)];\r\n    };\r\n\r\n    private static getId(url) {\r\n        return url.replace(/[a-z\\/\\.\\:]*/g, \"\");\r\n    };\r\n\r\n}"]}