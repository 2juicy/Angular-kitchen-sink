{"version":3,"file":"film-actions.js","sourceRoot":"","sources":["film-actions.ts"],"names":[],"mappings":"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","sourcesContent":["import {Http} from \"@angular/http\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {Actions} from \"angular2-redux-util\";\r\nimport 'rxjs/add/operator/map';\r\n\r\nexport const REQUEST_FILMS = 'REQUEST_FILMS';\r\nexport const RECEIVE_FILMS = 'RECEIVE_FILMS';\r\nexport const REQUEST_FILM = 'REQUEST_FILM';\r\nexport const RECEIVE_FILM = 'RECEIVE_FILM';\r\nexport const CURRENT_FILMS = 'CURRENT_FILMS';\r\nexport const RECEIVE_NUMBER_OF_FILMS = 'RECEIVE_NUMBER_OF_FILMS';\r\nexport const CURRENT_FILM = 'CURRENT_FILM';\r\n\r\nconst BASE_URL = \"http://swapi.co/api/films/\";\r\n\r\n@Injectable()\r\nexport class FilmActions extends Actions {\r\n\r\n    constructor(private _http:Http) {\r\n        super();\r\n    }\r\n\r\n    fetchFilms() {\r\n        return (dispatch) => {\r\n            dispatch(this.requestFilms());\r\n            var sub = this._http.get(`${BASE_URL}`)\r\n                .map(result => result.json())\r\n                .map(json => {\r\n                    dispatch(this.receiveFilms(json.results));\r\n                    dispatch(this.receiveNumberOfFilms(json.count));\r\n                })\r\n                .subscribe(e=>sub.unsubscribe());\r\n        };\r\n    }\r\n\r\n    fetchFilm(index) {\r\n        return (dispatch) => {\r\n            dispatch(this.requestFilm());\r\n            var sub = this._http.get(`${BASE_URL}${index + 1}/`)\r\n                .map(result => result.json())\r\n                .map(json => {\r\n                    dispatch(this.receiveFilm(json));\r\n                })\r\n                .subscribe(e=>sub.unsubscribe());\r\n        };\r\n    }\r\n\r\n    requestFilms() {\r\n        return {type: REQUEST_FILMS};\r\n    }\r\n\r\n    receiveFilms(films) {\r\n        return {\r\n            type: RECEIVE_FILMS,\r\n            films\r\n        }\r\n    }\r\n\r\n    receiveNumberOfFilms(count) {\r\n        return {\r\n            type: RECEIVE_NUMBER_OF_FILMS,\r\n            count\r\n        }\r\n    }\r\n\r\n    requestFilm() {\r\n        return {type: REQUEST_FILM};\r\n    }\r\n\r\n    receiveFilm(film) {\r\n        return {\r\n            type: RECEIVE_FILM,\r\n            film\r\n        }\r\n    }\r\n\r\n    setCurrentFilm(currentIndex) {\r\n        return {\r\n            type: CURRENT_FILM,\r\n            currentIndex\r\n        }\r\n    }\r\n}\r\n"]}