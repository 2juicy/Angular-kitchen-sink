{"version":3,"file":"user-actions.js","sourceRoot":"","sources":["user-actions.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;QAKa,aAAa,EACb,aAAa,EACb,YAAY,EACZ,eAAe;;;;;;;;;;;;;;YAHf,2BAAA,aAAa,GAAG,eAAe,CAAA,CAAC;YAChC,2BAAA,aAAa,GAAG,eAAe,CAAA,CAAC;YAChC,0BAAA,YAAY,GAAG,cAAc,CAAA,CAAC;YAC9B,6BAAA,eAAe,GAAG,iBAAiB,CAAA,CAAC;YAGjD;gBAAiC,+BAAO;gBAEpC,qBAAoB,KAAU;oBAC1B,iBAAO,CAAC;oBADQ,UAAK,GAAL,KAAK,CAAK;gBAE9B,CAAC;gBAED,gCAAU,GAAV;oBAAA,iBAUC;oBATG,IAAM,QAAQ,GAAU,6BAA6B,CAAC;oBACtD,MAAM,CAAC,UAAC,QAAQ;wBACZ,QAAQ,CAAC,KAAI,CAAC,YAAY,EAAE,CAAC,CAAC;wBAC9B,IAAI,GAAG,GAAG,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAG,QAAU,CAAC;6BAClC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,EAAE,EAAb,CAAa,CAAC;6BAC5B,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,OAAO,EAAZ,CAAY,CAAC;6BACzB,GAAG,CAAC,UAAA,MAAM,IAAK,OAAA,QAAQ,CAAC,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAnC,CAAmC,CAAC;6BACnD,SAAS,CAAC,UAAA,CAAC,IAAE,OAAA,GAAG,CAAC,WAAW,EAAE,EAAjB,CAAiB,CAAC,CAAC;oBACzC,CAAC,CAAC;gBACN,CAAC;gBAED,kCAAY,GAAZ;oBACI,MAAM,CAAC,EAAC,IAAI,EAAE,aAAa,EAAC,CAAC;gBACjC,CAAC;gBAED,kCAAY,GAAZ,UAAa,KAAK;oBACd,MAAM,CAAC;wBACH,IAAI,EAAE,aAAa;wBACnB,YAAK;wBACL,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE;qBACtB,CAAA;gBACL,CAAC;gBAED,oCAAc,GAAd,UAAe,OAAO;oBAClB,MAAM,CAAC;wBACH,IAAI,EAAE,YAAY;wBAClB,gBAAO;qBACV,CAAA;gBACL,CAAC;gBAED,mCAAa,GAAb,UAAc,UAAU;oBACpB,MAAM,CAAC;wBACH,IAAI,EAAE,eAAe;wBACrB,UAAU,EAAE,UAAU;qBACzB,CAAA;gBACL,CAAC;gBA3CL;oBAAC,iBAAU,EAAE;;+BAAA;gBA4Cb,kBAAC;YAAD,CAAC,AA3CD,CAAiC,6BAAO,GA2CvC;YA3CD,qCA2CC,CAAA","sourcesContent":["import {Http} from \"@angular/http\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {Actions} from \"angular2-redux-util\";\r\nimport 'rxjs/add/operator/map';\r\n\r\nexport const REQUEST_USERS = 'REQUEST_USERS';\r\nexport const RECEIVE_USERS = 'RECEIVE_USERS';\r\nexport const CURRENT_USER = 'CURRENT_USER';\r\nexport const SET_FILM_FILTER = 'SET_FILM_FILTER';\r\n\r\n@Injectable()\r\nexport class UserActions extends Actions {\r\n\r\n    constructor(private _http:Http) {\r\n        super();\r\n    }\r\n\r\n    fetchUsers() {\r\n        const BASE_URL:string = \"http://swapi.co/api/people/\";\r\n        return (dispatch) => {\r\n            dispatch(this.requestUsers());\r\n            var sub = this._http.get(`${BASE_URL}`)\r\n                .map(result => result.json())\r\n                .map(json => json.results)\r\n                .map(result =>  dispatch(this.receiveUsers(result)))\r\n                .subscribe(e=>sub.unsubscribe());\r\n        };\r\n    }\r\n\r\n    requestUsers() {\r\n        return {type: REQUEST_USERS};\r\n    }\r\n\r\n    receiveUsers(users) {\r\n        return {\r\n            type: RECEIVE_USERS,\r\n            users,\r\n            updated: Date.now()\r\n        }\r\n    }\r\n\r\n    setCurrentUser(current) {\r\n        return {\r\n            type: CURRENT_USER,\r\n            current\r\n        }\r\n    }\r\n\r\n    setFilmFilter(filmFilter) {\r\n        return {\r\n            type: SET_FILM_FILTER,\r\n            filmFilter: filmFilter\r\n        }\r\n    }\r\n}\r\n"]}