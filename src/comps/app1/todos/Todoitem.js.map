{"version":3,"file":"Todoitem.js","sourceRoot":"","sources":["Todoitem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAwBA;gBAEI,kBAAY,OAAwB;oBAkB5B,aAAQ,GAAG,KAAK,CAAC;oBAUzB,SAAI,GAAG,IAAI,mBAAY,EAAE,CAAC;oBAE1B,SAAI,GAAG,IAAI,mBAAY,EAAE,CAAC;oBA7BtB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAChD,CAAC;gBAMD,4BAAS,GAAT;oBACI,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC3C,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACV,OAAO,CAAC,gBAAgB,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,EAAvB,CAAuB,CAAC,CAAC;wBACvD,OAAO,CAAC,kBAAkB,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,EAAzB,CAAyB,CAAC,CAAC;wBAC3D,OAAO,CAAC,kBAAkB,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,EAAzB,CAAyB,CAAC,CAAC;oBAC/D,CAAC;gBACL,CAAC;gBAQD,sBAAI,0BAAI;yBAAR,UAAS,KAAmB;wBACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACvB,CAAC;;;mBAAA;gBAOD,8BAAW,GAAX;oBACI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC;gBAED,8BAAW,GAAX;oBACI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;oBAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;wBACd,MAAM,CAAC;oBACX,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC;gBAnBD;oBAAC,YAAK,EAAE;;;oDAAA;gBAKR;oBAAC,aAAM,EAAE;;sDAAA;gBAET;oBAAC,aAAM,EAAE;;sDAAA;gBA9Cb;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,WAAW;wBACrB,QAAQ,EAAE,YAAY;wBACtB,QAAQ,EAAE,gpBAQT;wBACD,MAAM,EAAE,CAAC,2BAAgB,CAAC;wBAC1B,eAAe,EAAE,8BAAuB,CAAC,MAAM;qBAClD,CAAC;;4BAAA;gBA6CF,eAAC;YAAD,CAAC,AA5CD,IA4CC;YA5CD,+BA4CC,CAAA","sourcesContent":["import {\r\n    Component, Input, Output, EventEmitter, ChangeDetectionStrategy, KeyValueDiffers,\r\n    KeyValueDiffer\r\n} from '@angular/core';\r\nimport {TodoItemModel} from './TodoService';\r\nimport TodoItemTemplate from './Todoitem.css!text';\r\n\r\n//import './Todoitem.css';\r\n\r\n@Component({\r\n    selector: 'todo-item',\r\n    moduleId: __moduleName,\r\n    template: `\r\n                <div class=\"view\">\r\n                    <input [(ngModel)]=\"_item.task\" class=\"editInput\" *ngIf=\"editMode\" value=\"{{_item.task}}\"/>\r\n                    <label  *ngIf=\"!editMode\">{{_item.getKey('task')}}</label>\r\n                    <button (click)=\"doneClicked()\"  class=\"fa fa-minus buttonsDone\"></button>\r\n                    <button (click)=\"editClicked()\" [ngClass]=\"{'fa-check-square': editMode}\" class=\"fa fa-edit buttonsEdit\"></button>\r\n                    <button style=\"position: relative; left: -80px; top: -62px\" class=\"pull-right fa fa-arrows-v buttonsEdit\"></button>\r\n                </div>\r\n    `,\r\n    styles: [TodoItemTemplate],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TodoItem {\r\n\r\n    constructor(differs: KeyValueDiffers) {\r\n        this.differ = differs.find([]).create(null);\r\n    }\r\n\r\n    /**\r\n     * Use KeyValueDiffers to generate KeyValueChangeRecord of each change\r\n     * using the ngDoCheck life cycle hook\r\n     */\r\n    ngDoCheck() {\r\n        var changes = this.differ.diff(this._item);\r\n        if (changes) {\r\n            changes.forEachAddedItem(r => console.log('added', r));\r\n            changes.forEachRemovedItem(r => console.log('removed', r));\r\n            changes.forEachChangedItem(r => console.log('changed', r));\r\n        }\r\n    }\r\n\r\n    private differ:KeyValueDiffer;\r\n    private editMode = false;\r\n    private _item:TodoItemModel;\r\n\r\n    // demonstrate intercepting a set input in case you want to modify data\r\n    @Input()\r\n    set item(value:TodoItemModel) {\r\n        this._item = value;\r\n    }\r\n\r\n    @Output()\r\n    done = new EventEmitter();\r\n    @Output()\r\n    edit = new EventEmitter();\r\n\r\n    doneClicked() {\r\n        this.done.emit(this._item);\r\n    }\r\n\r\n    editClicked() {\r\n        this.editMode = !this.editMode;\r\n        if (this.editMode)\r\n            return;\r\n        this.edit.emit(this._item);\r\n    }\r\n}\r\n"]}