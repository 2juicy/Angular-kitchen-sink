{"version":3,"file":"Todolist.js","sourceRoot":"","sources":["Todolist.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    Component,\r\n    ApplicationRef\r\n} from \"@angular/core\";\r\nimport {TodoItem} from \"./Todoitem\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {AppStore} from \"angular2-redux-util\";\r\nimport {TodoService} from \"./TodoService\";\r\nimport {TodoModel} from \"./TodoModel\";\r\nimport {List} from \"Immutable\";\r\nimport TodolistStyle from './Todolist.css!text'\r\n\r\ntype channelTodoObservable = Observable<TodoItem>;\r\ntype channelTodosObservable = Observable<Array<channelTodoObservable>>;\r\n\r\n@Component({\r\n    selector: 'todo-list',\r\n    moduleId: __moduleName,\r\n    template: `\r\n                <section class=\"todoapp\" style=\"height: 500px\">\r\n                  <header class=\"header\">\r\n                    <h1>your to-do's</h1>\r\n                    <input class=\"new-todo\" placeholder=\"What needs to be done?\"\r\n                    autofocus [(ngModel)]=\"newItem\" (keyup.enter)=\"addItem(newItem)\">\r\n                    <button class=\"btn btn-default btn-lg\" (click)=\"addItem(newItem)\">Add todo</button>\r\n                  </header>\r\n                  <section class=\"main\">\r\n                    <ul class=\"todo-list\">\r\n                      <li *ngFor=\"let item of m_dataStore | sortBy;  let i=index;trackBy:identify\" nodeLogger=\"{{item}}\"> \r\n                        <todo-item [item]=\"item\" (done)=\"removeItem($event)\"\r\n                             [makeDraggable]=\"item\" makeDroppable (dropped)=\"onDrop($event, item)\"\r\n                            (edit)=\"editItem($event)\">\r\n                        </todo-item>\r\n                      </li>\r\n                    </ul>\r\n                  </section>\r\n                </section>\r\n    `,\r\n    styles: [TodolistStyle]\r\n\r\n})\r\nexport class TodoList {\r\n    newItem = '';\r\n    private m_dataStore:any = [];\r\n    private addItem:Function;\r\n    private editItem:Function;\r\n    private removeItem:Function;\r\n\r\n    constructor(private todoService:TodoService, private appStore:AppStore, private appRef:ApplicationRef) {\r\n\r\n        this.todoService.loadTodosRemote((status:number)=> {\r\n            if (status == -1) {\r\n                // ignore errors\r\n                return;\r\n            }\r\n        });\r\n\r\n        appStore.subscribe((path, prev, store) => {\r\n            this.m_dataStore = store;\r\n            this.newItem = '';\r\n        }, 'todos', true);\r\n\r\n        this.addItem = todoService.createDispatcher(todoService.addTodo, appStore);\r\n        this.removeItem = todoService.createDispatcher(todoService.removeTodo, appStore);\r\n        this.editItem = todoService.createDispatcher(todoService.editTodo, appStore);\r\n    }\r\n\r\n    onDrop(src:any, trg:TodoModel) {\r\n        var todos:List<TodoModel> = this.appStore.getState().todos;\r\n        var trgOrder = trg.getKey('order');\r\n        var srcOrder;\r\n        todos.forEach((todo:TodoModel)=> {\r\n            if (todo.getModelId() == src)\r\n                srcOrder = parseInt(todo.getKey('order'));\r\n        });\r\n        this.moveRow(srcOrder, trgOrder);\r\n        // this.appRef.tick();\r\n    }\r\n\r\n    private moveRow(src, trg) {\r\n        src = parseInt(src);\r\n        trg = parseInt(trg);\r\n        var todos:List<TodoModel> = this.appStore.getState().todos;\r\n\r\n        function getTodoModelByOrder(order:number) {\r\n            var index = todos.findIndex((i:TodoModel) => i.getKey('order') == order);\r\n            return todos.get(index);\r\n        }\r\n        if (src > trg) {\r\n            todos.forEach((todo:TodoModel)=> {\r\n                var curr:number = parseInt(todo.getKey('order'));\r\n                if (curr >= trg) {\r\n                    todo = todo.setKey<TodoModel>(TodoModel, 'order', curr + 1);\r\n                    todo['task'] = todo.getKey('task');\r\n                    this.editItem(todo);\r\n                }\r\n            });\r\n            var todoSrc:TodoModel = getTodoModelByOrder(src);\r\n            todoSrc = todoSrc.setKey<TodoModel>(TodoModel, 'order', trg);\r\n            todoSrc['task'] = todoSrc.getKey('task');\r\n            this.editItem(todoSrc);\r\n        } else {\r\n            todos.forEach((todo:TodoModel)=> {\r\n                var curr:number = parseInt(todo.getKey('order'));\r\n                if (curr <= trg) {\r\n                    todo = todo.setKey<TodoModel>(TodoModel, 'order', curr - 1);\r\n                    todo['task'] = todo.getKey('task');\r\n                    this.editItem(todo);\r\n                }\r\n            });\r\n            var todoSrc:TodoModel = getTodoModelByOrder(src);\r\n            todoSrc = todoSrc.setKey<TodoModel>(TodoModel, 'order', trg);\r\n            todoSrc['task'] = todoSrc.getKey('task');\r\n            this.editItem(todoSrc);\r\n        }\r\n    }\r\n\r\n    // do what ever logic you need to come up with the unique identifier\r\n    // of your item in loop, i will just return the object id.\r\n    // see for more info: http://www.bennadel.com/blog/3020-understanding-object-identity-with-ngfor-loops-in-angular-2-beta-3.htm\r\n    // and since we are using our own id identifier, we can see that through the nodeLogger\r\n    // values are getting updated and not re-instantiated all the time, which would be the case\r\n    // if we didn't use the identify method\r\n    identify(index, item:TodoModel) {\r\n        return item.getModelId();\r\n    }\r\n}"]}