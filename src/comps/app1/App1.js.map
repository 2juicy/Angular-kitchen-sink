{"version":3,"file":"App1.js","sourceRoot":"","sources":["App1.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAsBA;gBAMI,cAAoB,UAAsB,EAAU,MAAc;oBAA9C,eAAU,GAAV,UAAU,CAAY;oBAAU,WAAM,GAAN,MAAM,CAAQ;oBAF1D,YAAO,GAAY,KAAK,CAAC;oBAG7B,IAAI,CAAC,iBAAiB,EAAE,CAAC;oBAGzB,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBACrC,CAAC;gBAED,uBAAQ,GAAR;oBACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,cAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;gBACnE,CAAC;gBAwBM,gCAAiB,GAAxB;oBAAA,iBAgBC;oBAfG,IAAI,IAAI,GAAG,IAAI,CAAC;oBAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,cAAM,CAAC,MAAM,EAAE,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,UAAC,CAAW;wBAC5F,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBACxB,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,cAAM,CAAC,MAAM,EAAE,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,UAAC,CAAW;wBACxF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;4BACnB,MAAM,CAAC;wBACX,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;wBACzB,EAAE,CAAC,CAAC,MAAM,IAAI,UAAU,CAAC;4BACrB,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gCAChB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gCACpB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;4BACxB,CAAC;wBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAS,MAAM,CAAE,CAAC,CAAC,CAAC;oBAC9C,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,0BAAW,GAAX;oBACI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;oBAC1B,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;gBAC9B,CAAC;gBAvBD;oBAAC,gBAAS,CAAC,SAAS,CAAC;;qDAAA;gBA5CzB;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,YAAY;wBACtB,SAAS,EAAE,CAAC,wBAAc,EAAE,yBAAW,CAAC;wBACxC,QAAQ,EAAE,wBAAY;qBAEzB,CAAC;;wBAAA;gBAmEF,WAAC;YAAD,CAAC,AAlED,IAkEC;YAlED,uBAkEC,CAAA","sourcesContent":["import {\r\n    Component,\r\n    ViewChild\r\n} from \"@angular/core\";\r\nimport {Router} from \"@angular/router\";\r\nimport {\r\n    CommBroker,\r\n    IMessage\r\n} from \"../../services/CommBroker\";\r\nimport {Consts} from \"../../../src/Conts\";\r\nimport TodoStatsModel from \"./todos/TodoStatsModel\";\r\nimport {TodoService} from \"./todos/TodoService\";\r\nimport App1Template from './App1.html!text'\r\nimport {ModalDirective} from \"ng2-bootstrap\";\r\n\r\n\r\n@Component({\r\n    moduleId: __moduleName,\r\n    providers: [TodoStatsModel, TodoService],\r\n    template: App1Template\r\n\r\n})\r\nexport class App1 {\r\n    private routerActive: boolean;\r\n    private unsub1;\r\n    private unsub2;\r\n    private loading: boolean = false;\r\n\r\n    constructor(private commBroker: CommBroker, private router: Router) {\r\n        this.listenMenuChanges();\r\n\r\n        // redirect to To do's\r\n        router.navigate(['/App1/Todos']);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.routerActive = true;\r\n        this.commBroker.getService(Consts.Services().App).appResized();\r\n    }\r\n\r\n    /** Examples on router life-cycle hooks **/\r\n        // routerCanReuse(next:ComponentInstruction, prev:ComponentInstruction) {\r\n        //     return true;\r\n        // }\r\n\r\n        // routerOnReuse(segment:RouteSegment, tree:Tree<RouteSegment>) {\r\n        //      console.log(segment);\r\n        //     // console.log(to.urlPath ? to.urlPath : '' + ' ' + from.urlPath);\r\n        // }\r\n\r\n        // routerOnActivate(segment:RouteSegment, tree:Tree<RouteSegment>) {\r\n        //     this.routerActive = true;\r\n        //     // demonstrate delay on routing, maybe to load some server data first or show loading bar\r\n        //     return new Promise((resolve) => {\r\n        //         setTimeout(()=> {\r\n        //             resolve(false);\r\n        //         }, 3000)\r\n        //     });\r\n        // }\r\n\r\n    @ViewChild('lgModal') public lgModal: ModalDirective;\r\n\r\n    public listenMenuChanges() {\r\n        var self = this;\r\n        this.unsub1 = self.commBroker.onEvent(Consts.Events().LAZYLOAD_COMPLETED).subscribe((e: IMessage) => {\r\n            this.lgModal.hide();\r\n        });\r\n        this.unsub2 = self.commBroker.onEvent(Consts.Events().MENU_SELECTION).subscribe((e: IMessage) => {\r\n            if (!self.routerActive)\r\n                return;\r\n            let screen = (e.message);\r\n            if (screen == 'LazyLoad')\r\n                if (!this.loading) {\r\n                    this.loading = true;\r\n                    this.lgModal.show();\r\n                }\r\n            self.router.navigate([`/App1/${screen}`]);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unsub1.unsubscribe();\r\n        this.unsub2.unsubscribe();\r\n    }\r\n\r\n    // routerOnDeactivate(next:ComponentInstruction, prev:ComponentInstruction) {\r\n    //     this.routerActive = false;\r\n    // }\r\n}"]}