{"version":3,"file":"Settings.js","sourceRoot":"","sources":["Settings.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAoCA;gBACI,kBAAoB,YAAyB;oBAAzB,iBAAY,GAAZ,YAAY,CAAa;gBAAG,CAAC;gBA9BrD;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,UAAU;wBACpB,SAAS,EAAE,CAAC,uBAAU,CAAC;wBACvB,QAAQ,EAAE,60CAuBG;qBAChB,CAAC;;4BAAA;gBAIF,eAAC;YAAD,CAAC,AAFD,IAEC;YAFD,+BAEC,CAAA","sourcesContent":["///<reference path=\"../../../../typings/app.d.ts\"/>\r\n\r\nimport {Component} from \"@angular/core\";\r\nimport {StyleModel} from \"../../../models/StyleModel\";\r\nimport {StyleService} from \"../../../styles/StyleService\";\r\n\r\n\r\n@Component({\r\n    selector: 'Settings',\r\n    providers: [StyleModel],\r\n    template: `\r\n                <small>I am Settings component</small>\r\n                <hr/>\r\n                <h3>Choose your theme</h3>\r\n                <hr/>\r\n                  <div class=\"clearfix\" style=\"padding-bottom: 13px\">\r\n                  </div>\r\n                  <select class=\"form-control\"\r\n                    [(ngModel)]=\"styleService.model.theme\"\r\n                    (change)=\"styleService.model.theme=$event.value; styleService.onUpdate()\">\r\n                      <option *ngFor=\"let theme of styleService.model.themes\">{{theme}}</option>\r\n                  </select>\r\n                  <hr/>\r\n                  <h3>Auto load theme on start</h3>\r\n                  <div class=\"clearfix\" style=\"padding-bottom: 30px\">\r\n                  <div style=\"position: relative\" class=\"material-switch pull-left\">\r\n                    <input id=\"changeStyle\" name=\"someSwitchOption003\"\r\n                     [(ngModel)]=\"styleService.model.remember\"\r\n                     (change)=\"styleService.onUpdate()\" type=\"checkbox\"/>\r\n                    <label for=\"changeStyle\" class=\"label-primary\"></label>\r\n                  </div>\r\n                  <div class=\"clearfix\" style=\"padding-bottom: 13px\">\r\n                  <h1 style=\"color: gray\">{{styleService.model.remember == true ? 'On' : 'Off'}}</h1>\r\n                `\r\n})\r\n\r\nexport class Settings {\r\n    constructor(private styleService:StyleService) {}\r\n}\r\n"]}